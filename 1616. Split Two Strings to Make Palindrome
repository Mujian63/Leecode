class Solution:
    def checkPalindromeFormation(self, a: str, b: str) -> bool:
        def judge(s):
            if len(s) % 2 ==0:
                
                return s[:len(s)//2][::-1] == s[len(s)//2:]
            else:
                return s[:len(s)//2][::-1] == s[len(s)//2+1:]
            
        
        if judge(a) or judge(b):
            return True
        
        l1,r1 = 0,len(a)-1
        
        
        while (1):
            
            if l1>=r1:
                return True
            elif a[l1] == b[r1]:
                l1+=1
                r1-=1
            
            else:
                break
            
            
        
        if judge(a[l1:r1+1]) or judge(b[l1:r1+1]):
            return True
        
        l1,r1 = 0,len(a)-1
        while (1):
            
            if l1>=r1:
                return True
            elif b[l1] == a[r1]:
                l1+=1
                r1-=1
            
            else:
                break
            
        if judge(a[l1:r1+1]) or judge(b[l1:r1+1]):
            return True
        
        return False
