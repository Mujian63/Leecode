
class Solution:
    def maxProductPath(self, grid: List[List[int]]) -> int:
        dp = [[0 for i in range(len(grid[0]))] for i in range(len(grid))]
        dp[0][0] = (grid[0][0],grid[0][0])
        for i in range(1,len(grid[0])):
            dp[0][i] = (dp[0][i-1][0] * grid[0][i], dp[0][i-1][0] * grid[0][i])
        for i in range(1,len(grid)):
            dp[i][0] = (dp[i-1][0][0] * grid[i][0], dp[i-1][0][0] * grid[i][0])
        
        for i in range(1,len(grid)):
            for j in range(1,len(grid[0])):
                temp = []
                temp.append(grid[i][j] * dp[i][j-1][0])
                temp.append(grid[i][j] * dp[i][j-1][1])
                temp.append(grid[i][j] * dp[i-1][j][0])
                temp.append(grid[i][j] * dp[i-1][j][1])
                dp[i][j] = (max(temp),min(temp))
                
        
        if dp[-1][-1][0]>=0:
            return dp[-1][-1][0] %(10**9 +7)
        else:
            return -1
